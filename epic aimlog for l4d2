
ffi.cdef [[
    void* GetProcAddress(void* hModule, const char* lpProcName);
    void* GetModuleHandleA(const char* lpModuleName);
    
    typedef struct {
        uint8_t r;
        uint8_t g;
        uint8_t b;
        uint8_t a;
    } color_struct_t;

    typedef void (*console_color_print)(const color_struct_t&, const char*, ...);

    typedef void* (__thiscall* get_client_entity_t)(void*, int);
]]

local ffi_log = ffi.cast("console_color_print", ffi.C.GetProcAddress(ffi.C.GetModuleHandleA("tier0.dll"), "?ConColorMsg@@YAXABVColor@@PBDZZ"))

client.Command('developer 1')
client.Command('con_filter_text ""')
client.Command('con_filter_enable 1')

---@client.color_log


function client.log(msg, ...)
    for k, v in pairs({...}) do
        msg = tostring(msg .. v)
    end
    local clr = ffi.new("color_struct_t")
    local col = ffi.new("color_struct_t")
    local cvl = ffi.new("color_struct_t")
clr.r, clr.g, clr.b, clr.a = 255,69,68,255
col.r, col.g, col.b, col.a = 217,217,217,255
cvl.r, cvl.g, cvl.b, cvl.a = 255,255,255,255
    ffi_log(clr, "[aimware.net]" .. "")
    ffi_log(col, msg .. "")
    ffi_log(cvl,  "" .. "\n")
end


local function on_fire_fame_event(e)

    local lp = entities.GetLocalPlayer()
    local lp_index = client.GetLocalPlayerIndex()
    local attacker = entities.GetByUserID(e:GetInt('attacker'));
    local user = entities.GetByUserID(e:GetInt('userid'))
    local name = attacker:GetName()
    local weapon = e:GetString('weapon')

    if  user ~= lp_index then

client.log(name .. " kill a " .. string.lower(user:GetName()) .. " with " .. weapon)

    end
end

callbacks.Register("FireGameEvent", on_fire_fame_event)


local function AimbotTarget(e)

    local alive = e:IsAlive() == true and 'yes' or 'no'
    local dormant = e:IsDormant() == true and 'yes' or 'no'

client.log("yeeted " .. e:GetName() .. "  |  rhp: " .. e:GetHealth() .. "  |  max_hp: " .. e:GetMaxHealth() .. "  |  target_alive: " .. alive .. "  |  target_dormant: " .. dormant)

end
callbacks.Register("AimbotTarget", AimbotTarget)
